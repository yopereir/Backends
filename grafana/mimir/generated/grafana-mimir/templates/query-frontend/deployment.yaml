---
# Source: grafana-mimir/templates/query-frontend/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-query-frontend
  namespace: "grafana-mimir"
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: grafana-mimir
    app.kubernetes.io/version: 2.13.0
    helm.sh/chart: grafana-mimir-1.2.10
    app.kubernetes.io/part-of: grafana-mimir
    app.kubernetes.io/component: query-frontend
spec:
  replicas: 1
  strategy:
    rollingUpdate: {}
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/name: grafana-mimir
      app.kubernetes.io/part-of: grafana-mimir
      app.kubernetes.io/component: query-frontend
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: grafana-mimir
        app.kubernetes.io/version: 2.13.0
        helm.sh/chart: grafana-mimir-1.2.10
        app.kubernetes.io/part-of: grafana-mimir
        app.kubernetes.io/component: query-frontend
    spec:
      serviceAccountName: grafana
      
      automountServiceAccountToken: false
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/name: grafana-mimir
                    app.kubernetes.io/component: query-frontend
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      containers:
        - name: query-frontend
          image: docker.io/bitnami/grafana-mimir:2.13.0-debian-12-r3
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          args:
            - -target=query-frontend
            - "-config.expand-env=true"
            - -config.file=/bitnami/grafana-mimir/conf/mimir.yaml
          env:
            - name: MIMIR_MINIO_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: release-name-minio
                  key: root-user
            - name: MIMIR_MINIO_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: release-name-minio
                  key: root-password
          envFrom:
          resources:
            limits:
              cpu: 150m
              ephemeral-storage: 2Gi
              memory: 192Mi
            requests:
              cpu: 100m
              ephemeral-storage: 50Mi
              memory: 128Mi
          ports:
            - containerPort: 8080
              name: http
            - containerPort: 7946
              name: http-memberlist
            - containerPort: 9095
              name: grpc
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            tcpSocket:
              port: http
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            httpGet:
              path: /ready
              port: http
          volumeMounts:
            - name: empty-dir
              mountPath: /tmp
              subPath: tmp-dir
            - name: mimir-config
              mountPath: /bitnami/grafana-mimir/conf
            - name: data
              mountPath: /bitnami/grafana-mimir
      volumes:
        - name: empty-dir
          emptyDir: {}
        - name: data
          emptyDir: {}
        - name: mimir-config
          configMap:
            name: grafana
